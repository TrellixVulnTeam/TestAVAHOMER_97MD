{"ast":null,"code":"var _jsxFileName = \"/Users/enzoperreve/Desktop/dossier sans titre 3/TestAVAHOMER/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Landing from 'pages/Landing';\nimport Profile from 'pages/Profile';\nimport Login from 'pages/Login';\nimport Register from 'pages/Register';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { Fragment, Suspense, lazy, useEffect, useState } from \"react\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport { Provider } from \"react-redux\"; // Font Awesome Style Sheet\n\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // Tailwind CSS Style Sheet\n\nimport 'assets/styles/tailwind.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const blockchain = useSelector(state => state.blockchain);\n  const data = useSelector(state => state.data);\n  const [feedback, setFeedback] = useState(\"Maybe it's your lucky day.\");\n  const [claimingNft, setClaimingNft] = useState(false);\n\n  const claimNFTs = _amount => {\n    if (_amount <= 0) {\n      return;\n    }\n\n    setFeedback(\"Minting your AlpsHunks...\");\n    setClaimingNft(true);\n    blockchain.smartContract.methods.mint(_amount).send({\n      gasLimit: \"285000\",\n      to: \"0xf1De1A5c5a0091F54b8d6c87CDab1503c10c259B\",\n      from: blockchain.account,\n      value: blockchain.web3.utils.toWei(_amount.toString(), \"ether\")\n    }).once(\"error\", err => {\n      console.log(err);\n      setFeedback(\"Sorry, something went wrong please try again later.\");\n      setClaimingNft(false);\n    }).then(receipt => {\n      setFeedback(\"WOW, you now own a AlpsHunks. go visit NFTTRADE to view it.\");\n      setClaimingNft(false);\n      dispatch(fetchData(blockchain.account));\n    });\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/profile\",\n      component: Profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/register\",\n      component: Register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n      from: \"*\",\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"eHNIjqem7P4iZHSqXw8j8azvlAw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/enzoperreve/Desktop/dossier sans titre 3/TestAVAHOMER/src/App.js"],"names":["Switch","Route","Redirect","Landing","Profile","Login","Register","useDispatch","useSelector","React","Fragment","Suspense","lazy","useEffect","useState","connect","fetchData","Provider","App","dispatch","blockchain","state","data","feedback","setFeedback","claimingNft","setClaimingNft","claimNFTs","_amount","smartContract","methods","mint","send","gasLimit","to","from","account","value","web3","utils","toWei","toString","once","err","console","log","then","receipt","getData"],"mappings":"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","sourcesContent":["import { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Landing from 'pages/Landing';\r\nimport Profile from 'pages/Profile';\r\nimport Login from 'pages/Login';\r\nimport Register from 'pages/Register';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { Fragment, Suspense, lazy,useEffect,useState } from \"react\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n// Font Awesome Style Sheet\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\n// Tailwind CSS Style Sheet\r\nimport 'assets/styles/tailwind.css';\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const blockchain = useSelector((state) => state.blockchain);\r\n    const data = useSelector((state) => state.data);\r\n    const [feedback, setFeedback] = useState(\"Maybe it's your lucky day.\");\r\n    const [claimingNft, setClaimingNft] = useState(false);\r\n  \r\n    const claimNFTs = (_amount) => {\r\n      if (_amount <= 0) {\r\n        return;\r\n      }\r\n      setFeedback(\"Minting your AlpsHunks...\");\r\n      setClaimingNft(true);\r\n      blockchain.smartContract.methods\r\n        .mint(_amount)\r\n        .send({\r\n          gasLimit: \"285000\",\r\n          to: \"0xf1De1A5c5a0091F54b8d6c87CDab1503c10c259B\",\r\n          from: blockchain.account,\r\n          value: blockchain.web3.utils.toWei(\r\n            (_amount).toString(),\r\n            \"ether\"\r\n          ),\r\n        })\r\n        .once(\"error\", (err) => {\r\n          console.log(err);\r\n          setFeedback(\"Sorry, something went wrong please try again later.\");\r\n          setClaimingNft(false);\r\n        })\r\n        .then((receipt) => {\r\n          setFeedback(\r\n            \"WOW, you now own a AlpsHunks. go visit NFTTRADE to view it.\"\r\n          );\r\n          setClaimingNft(false);\r\n          dispatch(fetchData(blockchain.account));\r\n        });\r\n    };\r\n  \r\n    const getData = () => {\r\n      if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n        dispatch(fetchData(blockchain.account));\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      getData();\r\n    }, [blockchain.account]);\r\n  \r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}